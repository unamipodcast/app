rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Common functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function hasRole(role) {
      return isSignedIn() && 
        (request.auth.token.role == role || 
         (request.auth.token.roles != null && role in request.auth.token.roles));
    }
    
    function isAdmin() {
      return hasRole('admin');
    }
    
    function isParent() {
      return hasRole('parent');
    }
    
    function isSchool() {
      return hasRole('school');
    }
    
    function isAuthority() {
      return hasRole('authority');
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isGuardian(guardianIds) {
      return isSignedIn() && request.auth.uid in guardianIds;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isAdmin() || isOwner(userId);
    }
    
    // Children collection
    match /children/{childId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isAdmin() || isParent();
      allow delete: if isAdmin();
    }
    
    // Alerts collection
    match /alerts/{alertId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isAdmin() || isAuthority() || isParent();
      allow delete: if isAdmin();
    }
  }
}